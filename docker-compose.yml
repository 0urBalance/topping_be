services:
  postgresql:
    image: postgres:15-alpine
    container_name: topping_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-topping}
      POSTGRES_USER: ${DB_USER:-topping_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-topping_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d
    networks:
      - topping_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-topping_user} -d ${DB_NAME:-topping}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: topping_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@topping.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - topping_network
    depends_on:
      postgresql:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  topping_network:
    driver: bridge